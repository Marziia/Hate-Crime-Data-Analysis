---
title: "Analyzing Patterns and Biases in Hate Crimes: 
A Toronto-Based Statistical Study"
subtitle: 
author: 
  - Marzia Zaidi
thanks: "Code and data are available at: https://github.com/Marziia/Hate-Crime-Data-Analysis/tree/main."
date: today
date-format: long
abstract: "This paper explores the patterns and biases of hate crimes in Toronto, drawing on data from the Hate Crimes Open Data dataset, which includes all verified hate crime occurrences reported since 2018. By examining various bias categories, such as race, religion, and sexual orientation. This study aims to uncover trends and underlying societal factors that contribute to hate-motivated violence in the city. The analysis reveals significant variations in the prevalence and nature of hate crimes, shedding light on the complexities of victimization and their broader implications for community cohesion. Additionally, this research evaluates the effectiveness of current policies and community initiatives designed to prevent hate crimes and promote inclusivity. Ultimately, the findings of this study contribute to a deeper understanding of hate crimes in Toronto, offering valuable insights that can inform strategies to foster a safer and more equitable society."
format: html
number-sections: true
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
```

# Introduction

You can and should cross-reference sections and sub-sections. We use @citeR and @rohan.

The remainder of this paper is structured as follows. @sec-data....

# Data {#sec-data}

Some of our data is of penguins (@fig-bills), from @palmerpenguins.

```{r}
library(opendatatoronto)
library(tidyverse)
library(dplyr)
nameOfDataSet <- "hate-crimes-open-data"
#### Download data ####
package <- show_package(nameOfDataSet)

# get all resources for this package
resources <- list_package_resources(nameOfDataSet)

# identify datastore resources; by default, Toronto Open Data sets datastore resource format to CSV for non-geospatial and GeoJSON for geospatial resources

datastore_resources <- filter(resources, tolower(format) %in% c('csv', 'geojson'))

# load the first datastore resource as a sample
data <- filter(datastore_resources, row_number()==1) %>% get_resource()

# first, we analyze if the number of crimes have increased over the years

# Convert the string years to integers
years_numeric <- as.integer(data$REPORTED_YEAR)

# Create a histogram of the years
hist(years_numeric, breaks = 7, col = "lightgrey", 
     main = "Histogram of Years",
     xlab = "Year",
     ylab = "Frequency")

# Looking at this, we can see that the trend was mostly non existent till 2022, and then in 2023, we had a spike in crimes.


```

Talk more about it.

And also planes (@fig-planes). (You can change the height and width, but don't worry about doing that until you have finished every other aspect of the paper - Quarto will try to make it look nice and the defaults usually work well once you have enough text.)

```{r}
# we want to analyze if the crimes happened at night
# Here is the vector of time integers
times <- data$OCCURRENCE_TIME

# Pad integers to ensure four digits (HHMM format)
times_padded <- sprintf("%04s", times)

# Extract hours and minutes
hours <- as.integer(substr(times_padded, 1, 2))  # First two characters are the hours
minutes <- as.integer(substr(times_padded, 3, 4))  # Last two characters are the minutes

# Convert to total minutes since midnight
total_minutes <- hours * 60 + minutes


# Create a histogram of the total minutes since midnight
hist(total_minutes, breaks = 24, col = "lightblue", 
     main = "Histogram of Times (in minutes since midnight)",
     xlab = "Minutes since midnight",
     ylab = "Frequency")

# Convert total minutes to hours (fractional)
total_hours <- total_minutes / 60

# Create a histogram of the total hours since midnight
hist(total_hours, breaks = 24, col = "lightblue", 
     main = "Histogram of Times (in hours since midnight)",
     xlab = "Hours since midnight",
     ylab = "Frequency")

# we see most of these have been crimes during the day
```

```{r}
# analyze the time between a crime happening and the report
# Function to convert string integers to total minutes since midnight
convert_to_minutes <- function(time_strings) {
  # Pad the time strings to ensure four digits (HHMM format)
  times_padded <- sprintf("%04s", time_strings)
  
  # Extract hours and minutes
  hours <- as.integer(substr(times_padded, 1, 2))  # First two characters are hours
  minutes <- as.integer(substr(times_padded, 3, 4))  # Last two characters are minutes
  
  # Convert to total minutes since midnight
  total_minutes <- hours * 60 + minutes
  return(total_minutes)
}

# Convert both columns to minutes since midnight
time_start_minutes <- convert_to_minutes(data$OCCURRENCE_TIME)
time_end_minutes <- convert_to_minutes(data$REPORTED_TIME)


# Calculate time differences (end time - start time)
time_differences <- time_end_minutes - time_start_minutes

# Create a histogram of the time differences
hist(time_differences, breaks = 50, col = "red",
     main = "Histogram of Time Differences (in minutes)",
     xlab = "Time Difference (minutes)",
     ylab = "Frequency")

# most of the crimes were rerported very quickly, with some being reported the next day (corresponding to the negative portion of the distribution)

# this is a histogram of crimes by religion
# Install and load necessary packages
library(ggplot2)

# Create the bar plot
ggplot(data, aes(x = RELIGION_BIAS)) +
  geom_bar(fill = "skyblue", color = "black") +
  labs(title = "Frequency of hate crimes by religious bias", x = "Religion", y = "Count") +
  theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))




# this is a histogram of crimes by sexual orientation

# Create the bar plot
ggplot(data, aes(x = SEXUAL_ORIENTATION_BIAS)) +
  geom_bar(fill = "red", color = "black") +
  labs(title = "Frequency of hate crimes by sexual orientation", x = "Sexual Orientation", y = "Count") +
  theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))

# this is a histogram of crimes by race

# Create the bar plot
ggplot(data, aes(x = RACE_BIAS
               )) +
  geom_bar(fill = "red", color = "black") +
  labs(title = "Frequency of hate crimes by race", x = "Race", y = "Count") +
  theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
```

Talk way more about it.

# Model

The goal of our modelling strategy is to show that the number of crimes has increased over the years. We use a linear regression model to prove this

## Model set-up

### Model justification

# Results

Our results are summarized in

```{r}
data$OCCURRENCE_YEAR <- as.integer(data$OCCURRENCE_YEAR)
frequency_table <- table(data$OCCURRENCE_YEAR)
print(frequency_table)

```

```{r}
frequency_df <- as.data.frame(frequency_table)
colnames(frequency_df) <- c("Year_of_hate_crime", "frequency")
frequency_df$Year_of_hate_crime <- as.numeric(as.character(frequency_df$Year_of_hate_crime))
# Fit the linear regression model
model <- lm(frequency ~ Year_of_hate_crime, data = frequency_df)

# Print the summary of the model
summary(model)
# Load ggplot2
library(ggplot2)
ggplot(frequency_df, aes(x = Year_of_hate_crime, y = frequency)) +
  geom_point(color = "blue") +
  geom_smooth(method = "lm", color = "red") +
  labs(title = "Linear Regression of Frequency vs Year of Hate Crime",
       x = "Year of Hate crime",
       y = "Frequency")
```
